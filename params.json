{"name":"Stow","tagline":"StringTemplate4 Object Wrapper","body":"Stow\r\n===\r\n\r\n[StringTemplate 4](http://www.stringtemplate.org/) Object Wrapper\r\n\r\nStringTemplate is © Copyright StringTemplate / Terence Parr 2014\r\n\r\nStow is © Copyright Dave Parfitt 2014\r\n\r\n### What is it?\r\n\r\nStow generates Java wrapper classes for StringTemplate4 template groups. This allows you to easily access\r\nyour templates by *method* instead of using a String keys, and will also catch certain template\r\nparameter problems at compile time:\r\n\r\n  - renamed parameters\r\n  - removed parameters\r\n  - changes in parameter case\r\n\r\n### Installing\r\n\r\n```\r\n<dependency>\r\n  <groupId>com.github.metadave</groupId>\r\n  <artifactId>Stow</artifactId>\r\n  <version>0.1-SNAPSHOT</version>\r\n</dependency>\r\n```\r\n\r\n### Example\r\n\r\nThe following example takes a StringTemplate group file (`Greeting.stg`), and generates two classes: `DemoGreeting` and `DemoFancyName`. Finally, a demo program uses these classes to generate output.\r\n\r\n\r\nGreeting.stg\r\n\r\n```\r\nGreeting(YourName, MyName) ::= <<\r\nHello <YourName>, my name is <MyName>!\r\n>>\r\n\r\nFancyName(Name) ::= <<\r\n  ~~~<Name>~~~\r\n>>\r\n```\r\n\r\n\r\nRun stow with the following parameters:\r\n\r\n- -java_package com.foo.bar\r\n- -class_prefix Demo\r\n- -dest /path/to/some_directory\r\n- -stg resources/Greeting.stg\r\n\r\n\r\n\r\nwhich generates:\r\n\r\n\r\n<pre style=\"background:#fff;color:#000\"><span style=\"color:#ff5600\">package</span> <span style=\"color:#ff5600\">com.foo.bar</span>;\r\n<span style=\"color:#ff5600\">import</span> <span style=\"color:#ff5600\">org.stringtemplate.v4.ST</span>;\r\n<span style=\"color:#ff5600\">import</span> <span style=\"color:#ff5600\">org.stringtemplate.v4.STGroup</span>;\r\n<span style=\"color:#ff5600\">import</span> <span style=\"color:#ff5600\">com.metadave.stow.AbstractStow</span>;\r\n\r\n<span style=\"color:#919191\">// generated by stow</span>\r\n<span style=\"color:#919191\">// https://github.com/metadave/stow</span>\r\n<span style=\"color:#ff5600\">public</span> <span style=\"color:#ff5600\">class</span> <span style=\"color:#21439c\">DemoGreeting</span> <span style=\"color:#ff5600\">implements</span> AbstractStow {\r\n    ST st;\r\n    <span style=\"color:#ff5600\">public</span> <span style=\"color:#ff5600\">static</span> <span style=\"color:#ff5600\">final</span> <span style=\"color:#ff5600\">String</span> templateName <span style=\"color:#ff5600\">=</span> <span style=\"color:#00a33f\">\"Greeting\"</span>;\r\n\r\n    <span style=\"color:#ff5600\">public</span> <span style=\"color:#21439c\">DemoGreeting</span>(<span style=\"color:#ff5600\">STGroup</span> g) {\r\n        st <span style=\"color:#ff5600\">=</span> g<span style=\"color:#ff5600\">.</span>getInstanceOf(templateName);\r\n    }\r\n\r\n    <span style=\"color:#ff5600\">public</span> <span style=\"color:#ff5600\">ST</span> <span style=\"color:#21439c\">getST</span>() {\r\n        <span style=\"color:#ff5600\">return</span> st;\r\n    }\r\n\r\n    <span style=\"color:#ff5600\">public</span> <span style=\"color:#ff5600\">DemoGreeting</span> <span style=\"color:#21439c\">addYourName</span>(<span style=\"color:#ff5600\">AbstractStow</span> val) {\r\n        st<span style=\"color:#ff5600\">.</span>add(<span style=\"color:#00a33f\">\"YourName\"</span>, val<span style=\"color:#ff5600\">.</span>getST());\r\n        <span style=\"color:#ff5600\">return</span> this;\r\n    }\r\n\r\n    <span style=\"color:#ff5600\">public</span> <span style=\"color:#ff5600\">DemoGreeting</span> <span style=\"color:#21439c\">addYourName</span>(<span style=\"color:#ff5600\">Object</span> val) {\r\n        st<span style=\"color:#ff5600\">.</span>add(<span style=\"color:#00a33f\">\"YourName\"</span>, val);\r\n        <span style=\"color:#ff5600\">return</span> this;\r\n    }\r\n\r\n    <span style=\"color:#ff5600\">public</span> <span style=\"color:#ff5600\">DemoGreeting</span> <span style=\"color:#21439c\">addMyName</span>(<span style=\"color:#ff5600\">AbstractStow</span> val) {\r\n        st<span style=\"color:#ff5600\">.</span>add(<span style=\"color:#00a33f\">\"MyName\"</span>, val<span style=\"color:#ff5600\">.</span>getST());\r\n        <span style=\"color:#ff5600\">return</span> this;\r\n    }\r\n\r\n    <span style=\"color:#ff5600\">public</span> <span style=\"color:#ff5600\">DemoGreeting</span> <span style=\"color:#21439c\">addMyName</span>(<span style=\"color:#ff5600\">Object</span> val) {\r\n        st<span style=\"color:#ff5600\">.</span>add(<span style=\"color:#00a33f\">\"MyName\"</span>, val);\r\n        <span style=\"color:#ff5600\">return</span> this;\r\n    }\r\n}\r\n</pre>\r\n\r\nand\r\n\r\n<pre style=\"background:#fff;color:#000\"><span style=\"color:#ff5600\">package</span> <span style=\"color:#ff5600\">com.foo.bar</span>;\r\n<span style=\"color:#ff5600\">import</span> <span style=\"color:#ff5600\">org.stringtemplate.v4.ST</span>;\r\n<span style=\"color:#ff5600\">import</span> <span style=\"color:#ff5600\">org.stringtemplate.v4.STGroup</span>;\r\n<span style=\"color:#ff5600\">import</span> <span style=\"color:#ff5600\">com.metadave.stow.AbstractStow</span>;\r\n\r\n<span style=\"color:#919191\">// generated by stow</span>\r\n<span style=\"color:#919191\">// https://github.com/metadave/stow</span>\r\n<span style=\"color:#ff5600\">public</span> <span style=\"color:#ff5600\">class</span> <span style=\"color:#21439c\">DemoFancyName</span> <span style=\"color:#ff5600\">implements</span> AbstractStow {\r\n    ST st;\r\n    <span style=\"color:#ff5600\">public</span> <span style=\"color:#ff5600\">static</span> <span style=\"color:#ff5600\">final</span> <span style=\"color:#ff5600\">String</span> templateName <span style=\"color:#ff5600\">=</span> <span style=\"color:#00a33f\">\"FancyName\"</span>;\r\n\r\n    <span style=\"color:#ff5600\">public</span> <span style=\"color:#21439c\">DemoFancyName</span>(<span style=\"color:#ff5600\">STGroup</span> g) {\r\n        st <span style=\"color:#ff5600\">=</span> g<span style=\"color:#ff5600\">.</span>getInstanceOf(templateName);\r\n    }\r\n\r\n    <span style=\"color:#ff5600\">public</span> <span style=\"color:#ff5600\">ST</span> <span style=\"color:#21439c\">getST</span>() {\r\n        <span style=\"color:#ff5600\">return</span> st;\r\n    }\r\n\r\n    <span style=\"color:#ff5600\">public</span> <span style=\"color:#ff5600\">DemoFancyName</span> <span style=\"color:#21439c\">addName</span>(<span style=\"color:#ff5600\">AbstractStow</span> val) {\r\n        st<span style=\"color:#ff5600\">.</span>add(<span style=\"color:#00a33f\">\"Name\"</span>, val<span style=\"color:#ff5600\">.</span>getST());\r\n        <span style=\"color:#ff5600\">return</span> this;\r\n    }\r\n\r\n    <span style=\"color:#ff5600\">public</span> <span style=\"color:#ff5600\">DemoFancyName</span> <span style=\"color:#21439c\">addName</span>(<span style=\"color:#ff5600\">Object</span> val) {\r\n        st<span style=\"color:#ff5600\">.</span>add(<span style=\"color:#00a33f\">\"Name\"</span>, val);\r\n        <span style=\"color:#ff5600\">return</span> this;\r\n    }\r\n}\r\n</pre>\r\n\r\n\r\nThe snippet of code below shows basic usage of the generated code:\r\n\r\n\r\n<pre style=\"background:#fff;color:#000\"><span style=\"color:#ff5600\">STGroup</span> stg <span style=\"color:#ff5600\">=</span> <span style=\"color:#ff5600\">new</span> <span style=\"color:#ff5600\">STGroupFile</span>(<span style=\"color:#00a33f\">\"Greeting.stg\"</span>);\r\n\r\n<span style=\"color:#ff5600\">DemoGreeting</span> g <span style=\"color:#ff5600\">=</span> <span style=\"color:#ff5600\">new</span> <span style=\"color:#ff5600\">DemoGreeting</span>(stg);\r\ng<span style=\"color:#ff5600\">.</span>addMyName(<span style=\"color:#00a33f\">\"Dave\"</span>);\r\n\r\n<span style=\"color:#ff5600\">DemoFancyName</span> you <span style=\"color:#ff5600\">=</span> <span style=\"color:#ff5600\">new</span> <span style=\"color:#ff5600\">DemoFancyName</span>(stg);\r\nyou<span style=\"color:#ff5600\">.</span>addName(<span style=\"color:#00a33f\">\"User\"</span>);\r\n<span style=\"color:#919191\">// added as an ST object using the AbstractStow interface</span>\r\ng<span style=\"color:#ff5600\">.</span>addYourName(you);\r\n\r\n<span style=\"color:#ff5600\">System</span><span style=\"color:#ff5600\">.</span>out<span style=\"color:#ff5600\">.</span>println(g<span style=\"color:#ff5600\">.</span>getST()<span style=\"color:#ff5600\">.</span>render());\r\n</pre>\r\n\r\nWhen the code above is run, the following text is displayed in the console:\r\n\r\n\tHello ~~~User~~~, my name is Dave!\r\n\r\n### Integration with Maven\r\n\r\nThis needs some cleanup, it seems like my IDE picks up the generated classes\r\nbut Maven doesn't. \r\n\r\nChange the arguments `-java_package`, `-class_prefix`, `-dest`, and `-stg` in the monsterous snippet of XML below, and add to your pom.xml. \r\n\r\n```\r\n  <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.codehaus.mojo</groupId>\r\n                <artifactId>exec-maven-plugin</artifactId>\r\n                <version>1.1.1</version>\r\n                <executions>\r\n                    <execution>\r\n                        <id>RunStow</id>\r\n                        <phase>compile</phase>\r\n                        <goals>\r\n                            <goal>exec</goal>\r\n                        </goals>\r\n                    </execution>\r\n                </executions>\r\n                <configuration>\r\n                    <executable>java</executable>\r\n                    <arguments>\r\n                        <argument>-classpath</argument>\r\n                        <classpath/>\r\n                        <argument>com.metadave.stow.Stow</argument>\r\n\r\n                        <argument>-java_package</argument>\r\n                            <argument>com.foo.bar</argument>\r\n                        <argument>-class_prefix</argument>\r\n                            <argument>Demo</argument>\r\n                        <argument>-dest</argument>\r\n                            <argument>${project.build.sourceDirectory}/com/foo/bar</argument>\r\n                        <argument>-stg</argument>\r\n                            <argument>${project.build.sourceDirectory}/../resources/Demo.stg</argument>\r\n\r\n                    </arguments>\r\n                </configuration>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n```\r\n\r\n\r\n### Contributing\r\n\r\nFork this repo, create a branch with\r\n\r\n\tgit checkout -b your_branch_name\r\n\r\nSubmit a pull request when your code is ready for review.\r\n### License\r\n\r\nhttp://www.apache.org/licenses/LICENSE-2.0.html\r\n\r\n---\r\n\r\n© 2014 Dave Parfitt\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}